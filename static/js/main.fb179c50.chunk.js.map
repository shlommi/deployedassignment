{"version":3,"sources":["reducers/movieReducer.js","reducers/index.js","actions/types.js","reducers/movieSubDetailsReducer.js","store.js","components/layout/TextInputGroup.js","actions/actionsCreators.js","omdbapi.js","validTitleFunc.js","components/movies/AddMovie.js","components/layout/AppNavbar.js","components/movies/EditMovie.js","components/movies/DeleteMovie.js","components/movies/MovieCard.js","components/movies/MoviesList.js","App.js","index.js"],"names":["initialState","movies","curentEditedMovie","Title","Year","Runtime","Genre","Director","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","filter","movie","imdbID","subDetails","concat","toConsumableArray","composeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","thunk","TextInputGroup","_ref","name","placeholder","value","onChange","label","error","react_default","a","createElement","reactstrap_es","for","className","classnames","is-invalid","defaultProps","getMovies","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","res","wrap","_context2","prev","next","axios","get","sent","data","Search","stop","this","_x3","apply","getDetailsMovie","id","_ref4","_callee4","_context4","_x5","validTitle","title","toLowerCase","split","map","s","charAt","toUpperCase","substring","join","replace","AddMovie","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleModal","setState","modalOpen","errors","handleChange","e","defineProperty","target","handleSubmit","_this$state","TitlesInMovies","preventDefault","includes","trim","isNaN","test","_this$state2","color","onClick","isOpen","toggle","onSubmit","layout_TextInputGroup","active","Component","connect","AppNavbar","Fragment","dark","expand","href","navbar","movies_AddMovie","EditMovie","editIdMovie","getMovie","snapshot","currentMovie","_ref3","_callee3","_context3","_x4","DeleteMovie","modal","delete","deleteCurrentMovie","deleteIdMovie","MovieCard","handleShowDetails","collapse","_this2","_this$props$movie","Poster","moreDetails","style","cursor","top","width","src","alt","display","movies_EditMovie","movies_DeleteMovie","ownProps","find","item","movieId","MoviesList","fetchMoviesAndDetails","moviesCards","md","key","movies_MovieCard","fluid","_callee","getState","_context","forEach","_x","_x2","App","layout_AppNavbar","movies_MoviesList","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"gQAEMA,EAAe,CACnBC,OAAQ,GACRC,kBAAmB,CACjBC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,SAAU,aCLCC,cAAgB,CAC7BP,ODQa,WAAuC,IAA9BQ,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBV,EAAca,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOC,MACb,IEfsB,aFgBpB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEER,OAAQY,EAAOI,UAEnB,IEnBqB,YFoBnB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEP,kBAAmBW,EAAOI,UAE9B,IEtBwB,eFuBtB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEER,OAAQQ,EAAMR,OAAOiB,OAAO,SAAAC,GAAK,OAAIA,EAAMC,SAAWP,EAAOI,YAEjE,QACE,OAAOR,ICzBXY,WEJa,WAAwB,IAAvBZ,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQC,EAAOC,MACb,IDF6B,oBCG3B,OAAQD,EAAOI,SAAfK,OAAAP,OAAAQ,EAAA,EAAAR,CAA2BN,IAC7B,QACE,OAAOA,MCHPe,EAGQC,IAUCC,EANDC,YACZC,EAHmB,GAKnBJ,EAAiBK,YAAgBC,kFCT7BC,EAAiB,SAAAC,GAQjB,IAPJlB,EAOIkB,EAPJlB,KACAmB,EAMID,EANJC,KACAC,EAKIF,EALJE,YACAC,EAIIH,EAJJG,MACAC,EAGIJ,EAHJI,SACAC,EAEIL,EAFJK,MACAC,EACIN,EADJM,MAEA,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,IAAI,QAAQN,GACnBE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE5B,KAAMA,EACNmB,KAAMA,EACNC,YAAaA,EACbC,MAAOA,EACPC,SAAUA,EACVQ,UAAWC,IAAW,eAAgB,CAAEC,aAAcR,MAEvDA,GAASC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAeJ,MAejCP,EAAegB,aAAe,CAC5BjC,KAAM,QAGOiB,kDC9BFiB,EAAY,iCAAAC,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAX,EAAAY,KAAM,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAAX,EAAAgB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACXC,IAAMC,IAAN,yCAAAvC,OChBG,aDeQ,OACvBiC,EADuBE,EAAAK,KAI7BR,EAAS,CACPxC,KJpBsB,aIqBtBG,QAASsC,EAAIQ,KAAKC,SANS,wBAAAP,EAAAQ,SAAAZ,EAAAa,SAAN,gBAAAC,GAAA,OAAAlB,EAAAmB,MAAAF,KAAAxD,YAAA,IAoBZ2D,EAAkB,SAAAC,GAAE,sBAAAC,EAAAxD,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAX,EAAAY,KAAI,SAAAoB,EAAMlB,GAAN,IAAAC,EAAA,OAAAJ,EAAAX,EAAAgB,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACjBC,IAAMC,IAAN,8BAAAvC,OACcgD,EADd,YAAAhD,OCpCG,aDmCc,OAC7BiC,EAD6BkB,EAAAX,KAInCR,EAAS,CACPxC,KJtC6B,oBIuC7BG,QAASsC,EAAIQ,OANoB,wBAAAU,EAAAR,SAAAO,EAAAN,SAAJ,gBAAAQ,GAAA,OAAAH,EAAAH,MAAAF,KAAAxD,YAAA,IE3BlBiE,EARI,SAAAC,GAMjB,OALwBA,EACrBC,cACAC,MAAM,KACNC,IAAI,SAAAC,GAAC,OAAIA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,UAAU,KACjDC,KAAK,KACeC,QAAQ,UAAW,MCUtCC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAzE,OAAA0E,EAAA,EAAA1E,CAAAmD,KAAAoB,IACjBE,EAAAzE,OAAA2E,EAAA,EAAA3E,CAAAmD,KAAAnD,OAAA4E,EAAA,EAAA5E,CAAAuE,GAAAM,KAAA1B,KAAMqB,KAiBRM,YAAc,kBACZL,EAAKM,SAAS,CACZC,WAAYP,EAAK/E,MAAMsF,UACvBC,OAAQ,GACR7F,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,SAAU,MA1BKiF,EA4BnBS,aAAe,SAAAC,GAAC,OAAIV,EAAKM,SAAL/E,OAAAoF,EAAA,EAAApF,CAAA,GAAiBmF,EAAEE,OAAOnE,KAAOiE,EAAEE,OAAOjE,SA5B3CqD,EA6BnBa,aAAe,SAAAH,GAAK,IAAAI,EACgCd,EAAK/E,MAA/CN,EADUmG,EACVnG,MAAOC,EADGkG,EACHlG,KAAMC,EADHiG,EACGjG,QAASC,EADZgG,EACYhG,MAAOC,EADnB+F,EACmB/F,SAC/BgG,EAAiBf,EAAKD,MAAMtF,OAAO8E,IAAI,SAAAH,GAAK,OAAIA,EAAMzE,QAE5D,GADA+F,EAAEM,iBACY,KAAVrG,EAIJ,GAAIoG,EAAeE,SAAStG,EAAMuG,QAChClB,EAAKM,SAAS,CAAEE,OAAQ,CAAE7F,MAAO,0CAGnC,GAAa,KAATC,EAAJ,CAKIA,EAAO,MAAQuG,MAAMvG,KADb,UAC6BwG,KAAKxG,GAC5CoF,EAAKM,SAAS,CAAEE,OAAQ,CAAE5F,KAAM,4BAGlB,KAAZC,EAIU,KAAVC,EAIa,KAAbC,EAKJiF,EAAKK,cAJHL,EAAKM,SAAS,CAAEE,OAAQ,CAAEzF,SAAU,0BAJpCiF,EAAKM,SAAS,CAAEE,OAAQ,CAAE1F,MAAO,uBAJjCkF,EAAKM,SAAS,CAAEE,OAAQ,CAAE3F,QAAS,8BATnCmF,EAAKM,SAAS,CAAEE,OAAQ,CAAE5F,KAAM,2BARhCoF,EAAKM,SAAS,CAAEE,OAAQ,CAAE7F,MAAO,wBA/BnCqF,EAAK/E,MAAQ,CACXsF,WAAW,EACXC,OAAQ,GACR7F,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,SAAU,IAVKiF,mFAejBtB,KAAKqB,MAAMvC,6CAmDJ,IAAA6D,EACmD3C,KAAKzD,MAAvDN,EADD0G,EACC1G,MAAOC,EADRyG,EACQzG,KAAMC,EADdwG,EACcxG,QAASC,EADvBuG,EACuBvG,MAAOC,EAD9BsG,EAC8BtG,SAAUyF,EADxCa,EACwCb,OAE/C,OADArB,EAAWxE,GAEToC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoE,MAAM,OAAOC,QAAS7C,KAAK2B,YAAajD,UAAU,QAA1D,iBAGAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsE,OAAQ9C,KAAKzD,MAAMsF,UAAWkB,OAAQ/C,KAAK2B,aAChDtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,kBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwE,SAAUhD,KAAKmC,cACnB9D,EAAAC,EAAAC,cAAC0E,EAAD,CACE9E,MAAM,QACNJ,KAAK,QACLC,YAAY,iBACZC,MAAOhC,EACPiC,SAAU8B,KAAK+B,aACf3D,MAAO0D,EAAO7F,QAEhBoC,EAAAC,EAAAC,cAAC0E,EAAD,CACE9E,MAAM,OACNJ,KAAK,OACLC,YAAY,WACZC,MAAO/B,EACPgC,SAAU8B,KAAK+B,aACf3D,MAAO0D,EAAO5F,OAEhBmC,EAAAC,EAAAC,cAAC0E,EAAD,CACE9E,MAAM,UACNJ,KAAK,UACLC,YAAY,cACZC,MAAO9B,EACP+B,SAAU8B,KAAK+B,aACf3D,MAAO0D,EAAO3F,UAEhBkC,EAAAC,EAAAC,cAAC0E,EAAD,CACE9E,MAAM,QACNJ,KAAK,QACLC,YAAY,YACZC,MAAO7B,EACP8B,SAAU8B,KAAK+B,aACf3D,MAAO0D,EAAO1F,QAGhBiC,EAAAC,EAAAC,cAAC0E,EAAD,CACE9E,MAAM,WACNJ,KAAK,WACLC,YAAY,eACZC,MAAO5B,EACP6B,SAAU8B,KAAK+B,aACf3D,MAAO0D,EAAOzF,aAIpBgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ5B,KAAK,SAASgG,MAAM,OAAOC,QAAS7C,KAAKmC,cAAjD,QAGA9D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoE,MAAM,SAASM,QAAQ,EAAML,QAAS7C,KAAK2B,aAAnD,oBA9HWwB,aAiJRC,cAJS,SAAA7G,GAAK,MAAK,CAChCR,OAAQQ,EAAMR,OAAOA,SAKrB,CAAE+C,aAFWsE,CAGbhC,GC/IaiC,EAjBG,WAChB,OACEhF,EAAAC,EAAAC,cAACF,EAAAC,EAAMgF,SAAP,KACEjF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoE,MAAM,OAAOW,MAAI,EAACC,OAAO,MAC/BnF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaiF,KAAK,KAAlB,iBACApF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,OAAOgF,QAAM,GAC1BrF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACoF,EAAD,YCGRC,cACJ,SAAAA,EAAYvC,GAAO,IAAAC,EAAA,OAAAzE,OAAA0E,EAAA,EAAA1E,CAAAmD,KAAA4D,IACjBtC,EAAAzE,OAAA2E,EAAA,EAAA3E,CAAAmD,KAAAnD,OAAA4E,EAAA,EAAA5E,CAAA+G,GAAAlC,KAAA1B,KAAMqB,KAaRM,YAAc,WACZ,IAAMvB,EAAKkB,EAAKD,MAAMwC,YACtBvC,EAAKD,MAAMyC,SAAS1D,GACpBkB,EAAKM,SAAS,CACZC,WAAYP,EAAK/E,MAAMsF,UACvB5F,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,SAAU,GACVyF,OAAQ,MAxBOR,EA4BnBS,aAAe,SAAAC,GAAC,OAAIV,EAAKM,SAAL/E,OAAAoF,EAAA,EAAApF,CAAA,GAAiBmF,EAAEE,OAAOnE,KAAOiE,EAAEE,OAAOjE,SA5B3CqD,EA6BnBa,aAAe,SAAAH,GACbA,EAAEM,iBACF,IAAMD,EAAiBf,EAAKD,MAAMtF,OAAO8E,IAAI,SAAAH,GAAK,OAAIA,EAAMzE,QAF1CmG,EAGgCd,EAAK/E,MAA/CN,EAHUmG,EAGVnG,MAAOC,EAHGkG,EAGHlG,KAAMC,EAHHiG,EAGGjG,QAASC,EAHZgG,EAGYhG,MAAOC,EAHnB+F,EAGmB/F,SAErC,GAAIgG,EAAeE,SAAStG,EAAMuG,QAChClB,EAAKM,SAAS,CAAEE,OAAQ,CAAE7F,MAAO,0CAGnC,GAAc,KAAVA,EAAJ,CAKIC,EAAO,MAAQuG,MAAMvG,KADb,UAC6BwG,KAAKxG,GAC5CoF,EAAKM,SAAS,CAAEE,OAAQ,CAAE5F,KAAM,sBAGrB,KAATA,EAIY,KAAZC,EAIU,KAAVC,EAIa,KAAbC,EAKJiF,EAAKM,SAAS,CACZC,WAAW,IALXP,EAAKM,SAAS,CAAEE,OAAQ,CAAEzF,SAAU,0BAJpCiF,EAAKM,SAAS,CAAEE,OAAQ,CAAE1F,MAAO,uBAJjCkF,EAAKM,SAAS,CAAEE,OAAQ,CAAE3F,QAAS,yBAJnCmF,EAAKM,SAAS,CAAEE,OAAQ,CAAE5F,KAAM,iCAThCoF,EAAKM,SAAS,CAAEE,OAAQ,CAAE7F,MAAO,wBApCnCqF,EAAK/E,MAAQ,CACXN,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,SAAU,GACVyF,OAAQ,GACRD,WAAW,GAVIP,kFAqEAD,EAAO9E,EAAOwH,GAC3B/D,KAAKqB,MAAM2C,eAAiB3C,EAAM2C,cACpChE,KAAK4B,SAAS5B,KAAKqB,MAAM2C,+CAIpB,IAAArB,EACmD3C,KAAKzD,MAAvDN,EADD0G,EACC1G,MAAOC,EADRyG,EACQzG,KAAMC,EADdwG,EACcxG,QAASC,EADvBuG,EACuBvG,MAAOC,EAD9BsG,EAC8BtG,SAAUyF,EADxCa,EACwCb,OAE/C,OADArB,EAAWxE,GAEToC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoE,MAAM,OAAOC,QAAS7C,KAAK2B,aAAnC,cAGAtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsE,OAAQ9C,KAAKzD,MAAMsF,UAAWkB,OAAQ/C,KAAK2B,aAChDtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,mBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwE,SAAUhD,KAAKmC,cACnB9D,EAAAC,EAAAC,cAAC0E,EAAD,CACE9E,MAAM,QACNJ,KAAK,QACLC,YAAY,iBACZC,MAAOhC,EACPiC,SAAU8B,KAAK+B,aACf3D,MAAO0D,EAAO7F,QAEhBoC,EAAAC,EAAAC,cAAC0E,EAAD,CACE9E,MAAM,OACNJ,KAAK,OACLC,YAAY,WACZC,MAAO/B,EACPgC,SAAU8B,KAAK+B,aACf3D,MAAO0D,EAAO5F,OAEhBmC,EAAAC,EAAAC,cAAC0E,EAAD,CACE9E,MAAM,UACNJ,KAAK,UACLC,YAAY,cACZC,MAAO9B,EACP+B,SAAU8B,KAAK+B,aACf3D,MAAO0D,EAAO3F,UAEhBkC,EAAAC,EAAAC,cAAC0E,EAAD,CACE9E,MAAM,QACNJ,KAAK,QACLC,YAAY,YACZC,MAAO7B,EACP8B,SAAU8B,KAAK+B,aACf3D,MAAO0D,EAAO1F,QAGhBiC,EAAAC,EAAAC,cAAC0E,EAAD,CACE9E,MAAM,WACNJ,KAAK,WACLC,YAAY,eACZC,MAAO5B,EACP6B,SAAU8B,KAAK+B,aACf3D,MAAO0D,EAAOzF,aAIpBgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ5B,KAAK,SAASgG,MAAM,OAAOC,QAAS7C,KAAKmC,cAAjD,QAGA9D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoE,MAAM,SAASM,QAAQ,EAAML,QAAS7C,KAAK2B,aAAnD,oBAvIYwB,aA4JTC,cALS,SAAA7G,GAAK,MAAK,CAChCyH,aAAczH,EAAMR,OAAOC,kBAC3BD,OAAQQ,EAAMR,OAAOA,SAKrB,CAAE+H,SLpJoB,SAAA1D,GAAE,sBAAA6D,EAAApH,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAX,EAAAY,KAAI,SAAAgF,EAAM9E,GAAN,IAAAC,EAAA,OAAAJ,EAAAX,EAAAgB,KAAA,SAAA6E,GAAA,cAAAA,EAAA3E,KAAA2E,EAAA1E,MAAA,cAAA0E,EAAA1E,KAAA,EACVC,IAAMC,IAAN,8BAAAvC,OACcgD,EADd,YAAAhD,OC1BG,aDyBO,OACtBiC,EADsB8E,EAAAvE,KAI5BR,EAAS,CACPxC,KJ7BqB,YI8BrBG,QAASsC,EAAIQ,OANa,wBAAAsE,EAAApE,SAAAmE,EAAAlE,SAAJ,gBAAAoE,GAAA,OAAAH,EAAA/D,MAAAF,KAAAxD,YAAA,IKoJZsC,aAFCsE,CAGbQ,GCzKIS,cACJ,SAAAA,EAAYhD,GAAO,IAAAC,EAAA,OAAAzE,OAAA0E,EAAA,EAAA1E,CAAAmD,KAAAqE,IACjB/C,EAAAzE,OAAA2E,EAAA,EAAA3E,CAAAmD,KAAAnD,OAAA4E,EAAA,EAAA5E,CAAAwH,GAAA3C,KAAA1B,KAAMqB,KAMR0B,OAAS,WACPzB,EAAKM,SAAS,CACZ0C,OAAQhD,EAAK/E,MAAM+H,SATJhD,EAYnBiD,OAAS,SAAAnE,GACPkB,EAAKD,MAAMmD,mBAAmBlD,EAAKD,MAAMoD,gBAXzCnD,EAAK/E,MAAQ,CACX+H,OAAO,GAHQhD,wEAiBjB,OACEjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoE,MAAM,SAASC,QAAS7C,KAAK+C,QAArC,gBAGA1E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsE,OAAQ9C,KAAKzD,MAAM+H,MACnBvB,OAAQ/C,KAAK+C,OACbrE,UAAWsB,KAAKqB,MAAM3C,WAEtBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAauE,OAAQ/C,KAAK+C,QAA1B,iBAEA1E,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoE,MAAM,UAAUC,QAAS7C,KAAKuE,QAAtC,MAGAlG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoE,MAAM,SAASC,QAAS7C,KAAK+C,QAArC,oBAlCcI,aA4CXC,cACb,KACA,CAAEoB,mBNN8B,SAAApE,GAAE,OAAI,SAAAhB,GACtCA,EAAS,CACPxC,KJ5CwB,eI6CxBG,QAASqD,OMCEgD,CAGbiB,GC5CIK,cACJ,SAAAA,EAAYrD,GAAO,IAAAC,EAAA,OAAAzE,OAAA0E,EAAA,EAAA1E,CAAAmD,KAAA0E,IACjBpD,EAAAzE,OAAA2E,EAAA,EAAA3E,CAAAmD,KAAAnD,OAAA4E,EAAA,EAAA5E,CAAA6H,GAAAhD,KAAA1B,KAAMqB,KAWRsD,kBAAoB,WAClBrD,EAAKM,SAAS,CAAEgD,UAAWtD,EAAK/E,MAAMqI,YAXtCtD,EAAK/E,MAAQ,CACXqI,UAAU,EACV3I,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,SAAU,IARKiF,wEAgBV,IAAAuD,EAAA7E,KAAA8E,EAC2B9E,KAAKqB,MAAMpE,MAArCC,EADD4H,EACC5H,OAAQ6H,EADTD,EACSC,OAAQ9I,EADjB6I,EACiB7I,MACxBwE,EAAWxE,GAFJ,IAIC+I,EAAgBhF,KAAKqB,MAArB2D,YAER,OAAKhF,KAAKqB,MAAM2D,YAKd3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyG,MAAO,CAAEC,OAAQ,WAAaxG,UAAU,UAC5CL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2G,KAAG,EACHC,MAAM,OACNC,IAAKN,EACLO,IAAI,iBACJzC,QAAS,kBAAMgC,EAAKF,uBAGtBtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUsE,OAAQ9C,KAAKzD,MAAMqI,UAC3BvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoE,MAAM,QAAb,WACC3G,GAEHoC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoE,MAAM,QAAb,SACCoC,EAAY9I,MAEfmC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoE,MAAM,QAAb,YACCoC,EAAY7I,SAEfkC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoE,MAAM,QAAb,UACCoC,EAAY5I,OAEfiC,EAAAC,EAAAC,cAAA,OAAK0G,MAAO,CAAEM,QAAS,SACrBlH,EAAAC,EAAAC,cAACiH,EAAD,CAAW3B,YAAa3G,IACxBmB,EAAAC,EAAAC,cAACkH,EAAD,CAAahB,cAAevH,UAnCjC,YAxBWiG,aAgFTC,cANS,SAAC7G,EAAOmJ,GAC9B,MAAO,CACLV,YAAazI,EAAMY,WAAWwI,KAAK,SAAAC,GAAI,OAAIA,EAAK1I,SAAWwI,EAASG,YAIzDzC,CAAyBsB,GCjFlCoB,8LAEF9F,KAAKqB,MAAM0E,yDAGJ,IAEHC,EADehG,KAAKqB,MAAhBtF,OACiB8E,IAAI,SAAA5D,GAC3B,OACEoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKyH,GAAG,IAAIC,IAAKjJ,EAAMC,QACrBmB,EAAAC,EAAAC,cAAC4H,EAAD,CAAWlJ,MAAOA,EAAO4I,QAAS5I,EAAMC,OAAQwB,UAAU,YAKhE,OACEL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAW4H,OAAK,GACd/H,EAAAC,EAAAC,cAAA,MAAIG,UAAU,kBAAd,eACAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAMwH,WAlBW7C,aAiCVC,cAJS,SAAA7G,GAAK,MAAK,CAChCR,OAAQQ,EAAMR,OAAOA,SAKrB,CAAEgK,sBRjCiC,iCAAAjI,EAAAjB,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAX,EAAAY,KAAM,SAAAmH,EAAOjH,EAAUkH,GAAjB,OAAArH,EAAAX,EAAAgB,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA9G,KAAA,EACnCL,EAASN,KAD0B,OAEvBwH,IAAWvK,OAAOA,OAAO8E,IAAI,SAAA+E,GAAI,OAAIA,EAAK1I,SAClDsJ,QAAQ,SAAApG,GAAE,OAAIhB,EAASe,EAAgBC,MAHR,wBAAAmG,EAAAxG,SAAAsG,EAAArG,SAAN,gBAAAyG,EAAAC,GAAA,OAAA5I,EAAAoC,MAAAF,KAAAxD,YAAA,KQ+BtB4G,CAGb0C,GC3Baa,mLATX,OACEtI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqI,EAAD,MACAvI,EAAAC,EAAAC,cAACsI,EAAD,cALU1D,aCGlB2D,IAASC,OACP1I,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAUxJ,MAAOA,GACfa,EAAAC,EAAAC,cAAC0I,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.fb179c50.chunk.js","sourcesContent":["import { GET_MOVIES, GET_MOVIE, DELETE_MOVIE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  curentEditedMovie: {\r\n    Title: \"\",\r\n    Year: \"\",\r\n    Runtime: \"\",\r\n    Genre: \"\",\r\n    Director: \"\"\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload\r\n      };\r\n    case GET_MOVIE:\r\n      return {\r\n        ...state,\r\n        curentEditedMovie: action.payload\r\n      };\r\n    case DELETE_MOVIE:\r\n      return {\r\n        ...state,\r\n        movies: state.movies.filter(movie => movie.imdbID !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport movieReducer from \"./movieReducer\";\r\nimport movieSubDetailsReducer from \"./movieSubDetailsReducer\";\r\n\r\nexport default combineReducers({\r\n  movies: movieReducer,\r\n  subDetails: movieSubDetailsReducer\r\n});\r\n","export const GET_MOVIES = \"GET_MOVIES\";\r\nexport const GET_MOVIE = \"GET_MOVIE\";\r\nexport const GET_DETAILS_MOVIE = \"GET_DETAILS_MOVIE\";\r\nexport const DELETE_MOVIE = \"DELETE_MOVIE\";\r\n","import { GET_DETAILS_MOVIE } from \"../actions/types\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case GET_DETAILS_MOVIE:\r\n      return [action.payload, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/\";\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : null || compose;\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { FormGroup, Label, Input, FormFeedback } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  type,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  label,\r\n  error\r\n}) => {\r\n  return (\r\n    <div>\r\n      <FormGroup>\r\n        <Label for=\"name\">{label}</Label>\r\n        <Input\r\n          type={type}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n          className={classnames(\"form-control\", { \"is-invalid\": error })}\r\n        />\r\n        {error && <FormFeedback>{error}</FormFeedback>}\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import {\r\n  GET_MOVIES,\r\n  GET_MOVIE,\r\n  GET_DETAILS_MOVIE,\r\n  DELETE_MOVIE\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { API_KEY } from \"../omdbapi\";\r\n\r\nexport const fetchMoviesAndDetails = () => async (dispatch, getState) => {\r\n  await dispatch(getMovies());\r\n  const moviesIds = getState().movies.movies.map(item => item.imdbID);\r\n  moviesIds.forEach(id => dispatch(getDetailsMovie(id)));\r\n};\r\n\r\nexport const getMovies = () => async dispatch => {\r\n  const res = await axios.get(\r\n    `https://www.omdbapi.com/?s=all&apikey=${API_KEY}`\r\n  );\r\n  dispatch({\r\n    type: GET_MOVIES,\r\n    payload: res.data.Search\r\n  });\r\n};\r\n\r\nexport const getMovie = id => async dispatch => {\r\n  const res = await axios.get(\r\n    `https://www.omdbapi.com/?i=${id}&apikey=${API_KEY}`\r\n  );\r\n  dispatch({\r\n    type: GET_MOVIE,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getDetailsMovie = id => async dispatch => {\r\n  const res = await axios.get(\r\n    `https://www.omdbapi.com/?i=${id}&apikey=${API_KEY}`\r\n  );\r\n  dispatch({\r\n    type: GET_DETAILS_MOVIE,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const deleteCurrentMovie = id => dispatch => {\r\n  dispatch({\r\n    type: DELETE_MOVIE,\r\n    payload: id\r\n  });\r\n};\r\n","export const API_KEY = \"7f16f077\";\r\n","const validTitle = title => {\r\n  const uppercasedTitle = title\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(s => s.charAt(0).toUpperCase() + s.substring(1))\r\n    .join(\" \");\r\n  return uppercasedTitle.replace(/[\\W_]+/g, \" \");\r\n};\r\nexport default validTitle;\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovies } from \"../../actions/actionsCreators\";\r\nimport PropTypes from \"prop-types\";\r\nimport validTitle from \"../../validTitleFunc\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form\r\n} from \"reactstrap\";\r\n\r\nclass AddMovie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      modalOpen: false,\r\n      errors: {},\r\n      Title: \"\",\r\n      Year: \"\",\r\n      Runtime: \"\",\r\n      Genre: \"\",\r\n      Director: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getMovies();\r\n  }\r\n\r\n  toggleModal = () =>\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen,\r\n      errors: {},\r\n      Title: \"\",\r\n      Year: \"\",\r\n      Runtime: \"\",\r\n      Genre: \"\",\r\n      Director: \"\"\r\n    });\r\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  handleSubmit = e => {\r\n    const { Title, Year, Runtime, Genre, Director } = this.state;\r\n    const TitlesInMovies = this.props.movies.map(title => title.Title);\r\n    e.preventDefault();\r\n    if (Title === \"\") {\r\n      this.setState({ errors: { Title: \"Title is required\" } });\r\n      return;\r\n    }\r\n    if (TitlesInMovies.includes(Title.trim())) {\r\n      this.setState({ errors: { Title: \"Movie name is already existing!\" } });\r\n      return;\r\n    }\r\n    if (Year === \"\") {\r\n      this.setState({ errors: { Year: \"Year is required\" } });\r\n      return;\r\n    }\r\n    let regex = /^\\d{4}$/;\r\n    if (Year < 1900 || isNaN(Year) || !regex.test(Year)) {\r\n      this.setState({ errors: { Year: \"Valid Year is required\" } });\r\n      return;\r\n    }\r\n    if (Runtime === \"\") {\r\n      this.setState({ errors: { Runtime: \"Runtime is required\" } });\r\n      return;\r\n    }\r\n    if (Genre === \"\") {\r\n      this.setState({ errors: { Genre: \"Genre is required\" } });\r\n      return;\r\n    }\r\n    if (Director === \"\") {\r\n      this.setState({ errors: { Director: \"Director is required\" } });\r\n      return;\r\n    }\r\n\r\n    this.toggleModal();\r\n  };\r\n\r\n  render() {\r\n    const { Title, Year, Runtime, Genre, Director, errors } = this.state;\r\n    validTitle(Title);\r\n    return (\r\n      <div>\r\n        <Button color=\"info\" onClick={this.toggleModal} className=\"mt-2\">\r\n          Add New Movie\r\n        </Button>\r\n        <Modal isOpen={this.state.modalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader>Add Movie</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <TextInputGroup\r\n                label=\"Title\"\r\n                name=\"Title\"\r\n                placeholder=\"Add title name\"\r\n                value={Title}\r\n                onChange={this.handleChange}\r\n                error={errors.Title}\r\n              />\r\n              <TextInputGroup\r\n                label=\"Year\"\r\n                name=\"Year\"\r\n                placeholder=\"Add year\"\r\n                value={Year}\r\n                onChange={this.handleChange}\r\n                error={errors.Year}\r\n              />\r\n              <TextInputGroup\r\n                label=\"Runtime\"\r\n                name=\"Runtime\"\r\n                placeholder=\"Add runtime\"\r\n                value={Runtime}\r\n                onChange={this.handleChange}\r\n                error={errors.Runtime}\r\n              />\r\n              <TextInputGroup\r\n                label=\"Genre\"\r\n                name=\"Genre\"\r\n                placeholder=\"Add genre\"\r\n                value={Genre}\r\n                onChange={this.handleChange}\r\n                error={errors.Genre}\r\n              />\r\n\r\n              <TextInputGroup\r\n                label=\"Director\"\r\n                name=\"Director\"\r\n                placeholder=\"Add director\"\r\n                value={Director}\r\n                onChange={this.handleChange}\r\n                error={errors.Director}\r\n              />\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"info\" onClick={this.handleSubmit}>\r\n              Save\r\n            </Button>\r\n            <Button color=\"danger\" active={true} onClick={this.toggleModal}>\r\n              Cancle\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddMovie.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n  getMovies: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getMovies }\r\n)(AddMovie);\r\n","import React from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport AddMovie from \"../movies/AddMovie\";\r\n\r\nconst AppNavbar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand href=\"/\">Herolo Cinema</NavbarBrand>\r\n        <Nav className=\"ml-5\" navbar>\r\n          <NavItem>\r\n            <NavLink>\r\n              <AddMovie />\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovie, getMovies } from \"../../actions/actionsCreators\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport validTitle from \"../../validTitleFunc\";\r\n\r\nclass EditMovie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      Title: \"\",\r\n      Year: \"\",\r\n      Runtime: \"\",\r\n      Genre: \"\",\r\n      Director: \"\",\r\n      errors: {},\r\n      modalOpen: false\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    const id = this.props.editIdMovie;\r\n    this.props.getMovie(id);\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen,\r\n      Title: \"\",\r\n      Year: \"\",\r\n      Runtime: \"\",\r\n      Genre: \"\",\r\n      Director: \"\",\r\n      errors: {}\r\n    });\r\n  };\r\n\r\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const TitlesInMovies = this.props.movies.map(title => title.Title);\r\n    const { Title, Year, Runtime, Genre, Director } = this.state;\r\n\r\n    if (TitlesInMovies.includes(Title.trim())) {\r\n      this.setState({ errors: { Title: \"Movie name is already existing!\" } });\r\n      return;\r\n    }\r\n    if (Title === \"\") {\r\n      this.setState({ errors: { Title: \"Title is required\" } });\r\n      return;\r\n    }\r\n    let regex = /^\\d{4}$/;\r\n    if (Year < 1900 || isNaN(Year) || !regex.test(Year)) {\r\n      this.setState({ errors: { Year: \"Year is required\" } });\r\n      return;\r\n    }\r\n    if (Year === \"\") {\r\n      this.setState({ errors: { Year: \"Valid Year is required\" } });\r\n      return;\r\n    }\r\n    if (Runtime === \"\") {\r\n      this.setState({ errors: { Runtime: \"Runtime is required\" } });\r\n      return;\r\n    }\r\n    if (Genre === \"\") {\r\n      this.setState({ errors: { Genre: \"Genre is required\" } });\r\n      return;\r\n    }\r\n    if (Director === \"\") {\r\n      this.setState({ errors: { Director: \"Director is required\" } });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      modalOpen: false\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(props, state, snapshot) {\r\n    if (this.props.currentMovie !== props.currentMovie) {\r\n      this.setState(this.props.currentMovie);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Title, Year, Runtime, Genre, Director, errors } = this.state;\r\n    validTitle(Title);\r\n    return (\r\n      <div>\r\n        <Button color=\"info\" onClick={this.toggleModal}>\r\n          Edit movie\r\n        </Button>\r\n        <Modal isOpen={this.state.modalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader>Edit Movie</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <TextInputGroup\r\n                label=\"Title\"\r\n                name=\"Title\"\r\n                placeholder=\"Add title name\"\r\n                value={Title}\r\n                onChange={this.handleChange}\r\n                error={errors.Title}\r\n              />\r\n              <TextInputGroup\r\n                label=\"Year\"\r\n                name=\"Year\"\r\n                placeholder=\"Add year\"\r\n                value={Year}\r\n                onChange={this.handleChange}\r\n                error={errors.Year}\r\n              />\r\n              <TextInputGroup\r\n                label=\"Runtime\"\r\n                name=\"Runtime\"\r\n                placeholder=\"Add runtime\"\r\n                value={Runtime}\r\n                onChange={this.handleChange}\r\n                error={errors.Runtime}\r\n              />\r\n              <TextInputGroup\r\n                label=\"Genre\"\r\n                name=\"Genre\"\r\n                placeholder=\"Add genre\"\r\n                value={Genre}\r\n                onChange={this.handleChange}\r\n                error={errors.Genre}\r\n              />\r\n\r\n              <TextInputGroup\r\n                label=\"Director\"\r\n                name=\"Director\"\r\n                placeholder=\"Add director\"\r\n                value={Director}\r\n                onChange={this.handleChange}\r\n                error={errors.Director}\r\n              />\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"info\" onClick={this.handleSubmit}>\r\n              Save\r\n            </Button>\r\n            <Button color=\"danger\" active={true} onClick={this.toggleModal}>\r\n              Cancle\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditMovie.propTypes = {\r\n  currentMovie: PropTypes.object.isRequired,\r\n  getMovie: PropTypes.func.isRequired,\r\n  getMovies: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentMovie: state.movies.curentEditedMovie,\r\n  movies: state.movies.movies\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getMovie, getMovies }\r\n)(EditMovie);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalFooter } from \"reactstrap\";\r\nimport { deleteCurrentMovie } from \"../../actions/actionsCreators\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass DeleteMovie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n  delete = id => {\r\n    this.props.deleteCurrentMovie(this.props.deleteIdMovie);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button color=\"danger\" onClick={this.toggle}>\r\n          Delete Movie\r\n        </Button>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          className={this.props.className}\r\n        >\r\n          <ModalHeader toggle={this.toggle}>Delete movie?</ModalHeader>\r\n\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.delete}>\r\n              Ok\r\n            </Button>\r\n            <Button color=\"danger\" onClick={this.toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteCurrentMovie }\r\n)(DeleteMovie);\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardBody, Badge, Collapse } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport EditMovie from \"./EditMovie\";\r\nimport DeleteMovie from \"./DeleteMovie\";\r\nimport validTitle from \"../../validTitleFunc\";\r\n\r\nclass MovieCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: false,\r\n      Title: \"\",\r\n      Year: \"\",\r\n      Runtime: \"\",\r\n      Genre: \"\",\r\n      Director: \"\"\r\n    };\r\n  }\r\n\r\n  handleShowDetails = () => {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  };\r\n\r\n  render() {\r\n    const { imdbID, Poster, Title } = this.props.movie;\r\n    validTitle(Title);\r\n\r\n    const { moreDetails } = this.props;\r\n\r\n    if (!this.props.moreDetails) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Card style={{ cursor: \"pointer\" }} className=\"shadow\">\r\n          <CardImg\r\n            top\r\n            width=\"100%\"\r\n            src={Poster}\r\n            alt=\"Card image cap\"\r\n            onClick={() => this.handleShowDetails()}\r\n          />\r\n\r\n          <Collapse isOpen={this.state.collapse}>\r\n            <Card>\r\n              <CardBody>\r\n                <h5>\r\n                  <Badge color=\"info\">Title: </Badge>\r\n                  {Title}\r\n                </h5>\r\n                <h5>\r\n                  <Badge color=\"info\">Year:</Badge>\r\n                  {moreDetails.Year}\r\n                </h5>\r\n                <h5>\r\n                  <Badge color=\"info\">Runtime:</Badge>\r\n                  {moreDetails.Runtime}\r\n                </h5>\r\n                <h5>\r\n                  <Badge color=\"info\">Genre:</Badge>\r\n                  {moreDetails.Genre}\r\n                </h5>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <EditMovie editIdMovie={imdbID} />\r\n                  <DeleteMovie deleteIdMovie={imdbID} />\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Collapse>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  moreDetails: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    moreDetails: state.subDetails.find(item => item.imdbID === ownProps.movieId)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MovieCard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMoviesAndDetails } from \"../../actions/actionsCreators\";\r\nimport PropTypes from \"prop-types\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport { Row, Col, Container } from \"reactstrap\";\r\n\r\nclass MoviesList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMoviesAndDetails();\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.props;\r\n    let moviesCards = movies.map(movie => {\r\n      return (\r\n        <Col md=\"4\" key={movie.imdbID}>\r\n          <MovieCard movie={movie} movieId={movie.imdbID} className=\"mb-2\" />\r\n        </Col>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Container fluid>\r\n        <h2 className=\"display-4 mb-2\">Find movies</h2>\r\n        <Row>{moviesCards}</Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n  fetchMoviesAndDetails: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchMoviesAndDetails }\r\n)(MoviesList);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AppNavbar from \"./components/layout/AppNavbar\";\nimport MovieList from \"./components/movies/MoviesList\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <AppNavbar />\n        <MovieList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}